/* -*- Mode: C -*- */
/* Copyright (C) 2018-2023 by Henrik Theiling, License: GPLv3, see LICENSE file */
/* Automatically generated by mkmat. */

#ifndef CP_MAT_GEN_TAM_H_
#define CP_MAT_GEN_TAM_H_

#include <hob3lmat/mat_def.h>

typedef union {
    double v[2];
    struct {
        double x;
        double y;
    };
} cp_vec2_t;

typedef struct {
    cp_vec2_t min,max;
} cp_vec2_minmax_t;

typedef union {
    double v[3];
    struct {
        double x;
        double y;
        double z;
    };
    struct {
        cp_vec2_t b;
        double w;
    };
    struct {
        double we;
        cp_vec2_t be;
    };
} cp_vec3_t;

typedef struct {
    cp_vec3_t min,max;
} cp_vec3_minmax_t;

typedef union {
    double v[4];
    struct {
        double x;
        double y;
        double z;
        double w;
    };
    struct {
        cp_vec3_t b;
    };
    struct {
        double we;
        cp_vec3_t be;
    };
} cp_vec4_t;

typedef struct {
    cp_vec4_t min,max;
} cp_vec4_minmax_t;

typedef union {
    double v[2 * 2];
    double m[2][2];
    cp_vec2_t row[2];
} cp_mat2_t;

typedef union {
    double v[2 * (2 + 1)];
    struct {
       cp_mat2_t b;
       cp_vec2_t w;
    };
} cp_mat2w_t;

typedef struct {
    cp_mat2_t n;
    cp_mat2_t i;
    double d;
} cp_mat2i_t;

typedef struct {
    cp_mat2w_t n;
    cp_mat2w_t i;
    double d;
} cp_mat2wi_t;

typedef union {
    double v[3 * 3];
    double m[3][3];
    cp_vec3_t row[3];
} cp_mat3_t;

typedef union {
    double v[3 * (3 + 1)];
    struct {
       cp_mat3_t b;
       cp_vec3_t w;
    };
} cp_mat3w_t;

typedef struct {
    cp_mat3_t n;
    cp_mat3_t i;
    double d;
} cp_mat3i_t;

typedef struct {
    cp_mat3w_t n;
    cp_mat3w_t i;
    double d;
} cp_mat3wi_t;

typedef union {
    double v[4 * 4];
    double m[4][4];
    cp_vec4_t row[4];
} cp_mat4_t;

typedef struct {
    cp_mat4_t n;
    cp_mat4_t i;
    double d;
} cp_mat4i_t;

#endif /* CP_MAT_GEN_TAM_H_ */
